1)

;; Function main (main, funcdef_no=0, decl_uid=1908, cgraph_uid=1, symbol_order=1)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
main ()
{
  int q;
  int p;
  int c;
  int b;
  int a;

  <bb 2> :
  p = 6;
  a = 10;
  b = 20;
  _1 = a * b;
  c = _1 + 25;
  p = 6;
  q = Z;
  return;

}

2)

;; Function f (f, funcdef_no=0, decl_uid=1908, cgraph_uid=1, symbol_order=1)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
f ()
{
  int c;
  int b;
  int a;

  <bb 2> :
  a = Z;
  if (a <= 9)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  b = 5;
  c = 17;
  goto <bb 6>; [INV]

  <bb 4> :
  b = 6;
  c = 20;
  if (a == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  c = 0;

  <bb 6> :
  _1 = b * 10;
  _2 = c + _1;
  Z = _2;
  return;

}



3)

;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 2
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 8 6 7
;;
;; Loop 3
;;  header 8, latch 7
;;  depth 2, outer 2
;;  nodes: 8 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 10 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 7 9 }
;; 9 succs { 10 }
;; 10 succs { 6 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
main ()
{
  int j;
  int i;
  int sum;
  int D.1922;

  <bb 2> :
  sum = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  sum = sum * 2;

  <bb 4> :
  if (sum <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  i = 0;
  goto <bb 10>; [INV]

  <bb 6> :
  j = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _1 = i * j;
  sum = sum + _1;
  j = j + 1;

  <bb 8> :
  if (j <= 49)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i = i + 1;

  <bb 10> :
  if (i <= 24)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  D.1922 = 0;

  <bb 12> :
<L9>:
  return D.1922;

}



4)

;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
main ()
{
  int * p;
  int i;
  int b[3];
  int a[3];
  int D.1917;

  <bb 2> :
  b[0] = 1;
  b[1] = 2;
  b[2] = 3;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = b[i];
  a[i] = _1;
  i = i + 1;

  <bb 4> :
  if (i <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  p = &a;
  _2 = p + 8;
  *_2 = 5;
  a = {CLOBBER};
  b = {CLOBBER};
  D.1917 = 0;

  <bb 6> :
<L3>:
  return D.1917;

}



5)

;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
main ()
{
  int d;
  int c;
  int b;
  int a;
  int D.1917;

  <bb 2> :
  d = 10;
  if (c > d)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  a = 3;
  b = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  a = 2;
  b = 3;

  <bb 5> :
  c = a + b;
  D.1917 = 0;

  <bb 6> :
<L3>:
  return D.1917;

}



6)

;; Function AddTwo (AddTwo, funcdef_no=0, decl_uid=1908, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
AddTwo (int a)
{
  int D.1914;

  <bb 2> :
  a = a + 2;
  D.1914 = a;

  <bb 3> :
<L0>:
  return D.1914;

}



;; Function main (main, funcdef_no=1, decl_uid=1910, cgraph_uid=2, symbol_order=1)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
main ()
{
  int x;
  int D.1916;

  <bb 2> :
  x = 3;
  x = AddTwo (x);
  D.1916 = x;

  <bb 3> :
<L0>:
  return D.1916;

}



7)

;; Function main (main, funcdef_no=0, decl_uid=1908, cgraph_uid=1, symbol_order=1)

Removing basic block 6
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
main ()
{
  int a;
  int i;
  int D.1916;

  <bb 2> :
  a = 10;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  N.0_1 = N;
  a = a + N.0_1;
  i = i + 1;

  <bb 4> :
  if (i <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.1916 = a;

  <bb 6> :
<L3>:
  return D.1916;

}



8)

;; Function main (main, funcdef_no=12, decl_uid=3089, cgraph_uid=13, symbol_order=12)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
main ()
{
  int b;
  int a;
  int D.3100;

  <bb 2> :
  a = 4;
  goto <bb 7>; [INV]

  <bb 3> :
  if (a <= 3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  b = b + 2;
  goto <bb 6>; [INV]

  <bb 5> :
  b = b * 2;

  <bb 6> :
  a = a + 1;

  <bb 7> :
  if (a <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  printf ("%d%d", a, b);
  D.3100 = 0;

  <bb 9> :
<L6>:
  return D.3100;

}



9)

;; Function main (main, funcdef_no=0, decl_uid=1907, cgraph_uid=1, symbol_order=0)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
main ()
{
  int c;
  int b;
  int a;
  int D.1913;

  <bb 2> :
  _1 = a + c;
  _2 = b + _1;
  _3 = c + a;
  b = _2 * _3;
  D.1913 = b;

  <bb 3> :
<L0>:
  return D.1913;

}







